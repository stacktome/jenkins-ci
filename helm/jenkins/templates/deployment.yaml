apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "jenkins.name" . }}
  namespace: {{ template "jenkins.namespace" . }}
  annotations: 
    {{- include "jenkins.commonAnnotations" . | nindent 4 }}
  labels:
    {{- include "jenkins.commonLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicasCount | default 1 }}
  selector:
    matchLabels:
    {{- include "jenkins.server.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
      {{- include "jenkins.server.selectorLabels" . | indent 8 }}
    spec:
      securityContext:
          fsGroup: 1000
          runAsUser: 1000
      serviceAccountName: {{ include "jenkins.serviceAccountName" . }}
      containers:
        - name: {{ template "jenkins.name" . }}
          image: {{ template "jenkins.getImage" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" | quote }}
          {{- with .Values.server.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          livenessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: jenkins-storage
              mountPath: /var/jenkins_home
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: jenkins-storage
          {{- if .Values.server.persistentVolume.enabled }}
          persistentVolumeClaim:
              claimName: {{ ternary .Values.server.persistentVolume.existingClaim (include "jenkins.claim" .) false}}
          {{ else }}
          emptyDir:
            sizeLimit: "2Gi"
          {{- end -}}
